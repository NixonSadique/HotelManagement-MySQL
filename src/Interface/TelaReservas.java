/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import com.formdev.flatlaf.FlatDarkLaf;
import gestorHotel.*;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.*;
import model.DAO.QuartoDAO;
import model.DAO.ReservasDAO;

/**
 *
 * @author HP
 */
public class TelaReservas extends javax.swing.JFrame {

    /**
     * Creates new form MenuReservas
     */
    
    public TelaReservas() {
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("IconHotel.png")));
        
        tabelaIn();
    }
    //FILL TABLES
    
    void tabelaIn() {
        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        Object[] linha;
        linha = new Object[5];
        Reservas reserva;
        ReservasDAO rDao = new ReservasDAO();
        ArrayList<Reservas> r = rDao.recuperar();
        
        for (int i = 0; i < r.size(); i++) {
            
            reserva = r.get(i);
            
            modelo.addRow(new Object[]{
                reserva.getId(),
                reserva.getNome(),
                reserva.getTelefone(),
                reserva.getEmail(),
                reserva.getQuarto(),//nr do quarto
                reserva.getPreco()*reserva.getTempo()
            });
        }

    }
    
    //CHECK OUT
    
    void checkOut(){
        DefaultTableModel m = (DefaultTableModel) tabela.getModel();
        
        
        ReservasDAO rDao = new ReservasDAO();
        int id = (int) m.getValueAt(tabela.getSelectedRow(), 0);
        
        if ( removerCliente(m) != 0) {
            if (rDao.deletar(id)) {
                recibo(m);
                m.removeRow(tabela.getSelectedRow());
            }
        }
        
    }
    
    public int removerCliente(DefaultTableModel dtm){
        Quarto quarto;
        QuartoDAO qDao = new QuartoDAO();
        ArrayList<Quarto> q = qDao.recuperar();
        
        for (int i = 0; i < q.size(); i++) {
            quarto = q.get(i);
            if( (int) dtm.getValueAt(tabela.getSelectedRow(), 4) == (quarto.getNrQuarto())){
                quarto.setDisponivel("Disponivel");
                quarto.setClienteNome(null);
                quarto.setClienteId(0);
                qDao.retirarCliente(quarto);
                return quarto.getId();
            }
        }
        return 0;
    }
    
    public void recibo(DefaultTableModel dtm){
        try {
            BufferedWriter bw = new BufferedWriter(new FileWriter(new File("RECIBO.TXT")));
            bw.write("Nome: " + dtm.getValueAt(tabela.getSelectedRow(), 1) + "\n");
            bw.write("Quarto: " + dtm.getValueAt(tabela.getSelectedRow(), 4) + "\n");
            bw.write("Preco: " + dtm.getValueAt(tabela.getSelectedRow(), 5) + "\n");
            bw.write("Obrigado por visitar o HOTEL BELO HORIZONTE, esperamos ve-lo novamente!");
            bw.close();
            Desktop d = Desktop.getDesktop();
            d.open(new File("RECIBO.TXT"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela Reservas");
        setResizable(false);

        tabela.setBackground(new java.awt.Color(204, 204, 255));
        tabela.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabela.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        tabela.setForeground(new java.awt.Color(0, 0, 0));
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Telefone", "E-mail ", "Quarto", "Preco"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabela);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/IconHotel.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("HOTEL BELO HORIZONTE");

        jButton1.setText("CheckOut");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        checkOut();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaReservas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
